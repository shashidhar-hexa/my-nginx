# Namespace for all components
apiVersion: v1
kind: Namespace
metadata:
  name: my-application

---

# NGINX Ingress Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: my-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-ingress
  template:
    metadata:
      labels:
        app: nginx-ingress
    spec:
      containers:
      - name: nginx-ingress-controller
        image: <your-custom-nginx-image> # Replace with your custom NGINX image
        ports:
        - containerPort: 80
        - containerPort: 443

---

# NGINX Ingress Service
apiVersion: v1
kind: Service
metadata:
  name: nginx-ingress
  namespace: my-application
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  - port: 443
    targetPort: 443
  selector:
    app: nginx-ingress

---

# UI Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ui-deployment
  namespace: my-application
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ui
  template:
    metadata:
      labels:
        app: ui
    spec:
      containers:
      - name: ui-container
        image: <your-ui-image>
        ports:
        - containerPort: 80

---

# Python Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: python-deployment
  namespace: my-application
spec:
  replicas: 2
  selector:
    matchLabels:
      app: python
  template:
    metadata:
      labels:
        app: python
    spec:
      containers:
      - name: python-container
        image: <your-python-image>
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password

---

# Java Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: java-deployment
  namespace: my-application
spec:
  replicas: 2
  selector:
    matchLabels:
      app: java
  template:
    metadata:
      labels:
        app: java
    spec:
      containers:
      - name: java-container
        image: <your-java-image>
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password

---

# PostgreSQL Secret
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: my-application
type: Opaque
data:
  database: <base64-encoded-database-name>
  username: <base64-encoded-username>
  password: <base64-encoded-password>

---

# PostgreSQL Service
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: my-application
spec:
  ports:
  - port: 5432
  selector:
    app: postgres

---

# PostgreSQL Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: my-application
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres-container
        image: postgres:latest
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        ports:
        - containerPort: 5432
